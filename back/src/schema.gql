# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type InvoiceFormatElement {
  id: ID!
  order: Int!
  label: String!
  own: Boolean!
}

type InvoiceLogElement {
  elementId: String!
  value: String!
}

type InvoiceLog {
  id: String!
  createdAt: DateTime!
  body: [InvoiceLogElement!]!
  invoiceFormatLog: InvoiceFormatLog!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type InvoiceFormatLog {
  id: ID!
  createdAt: DateTime!
  invoiceFormat: InvoiceFormat!
  elements: [InvoiceFormatElement!]!
}

type InvoiceFormat {
  id: ID!
  name: String!
  company: Company!
}

type RequestNotification {
  id: Int!
  userId: Int!
  user: User!
  isRead: IsRead!
  type: NotificationRequestType!
  requestReceiverId: Int!
  requestReceiver: RequestReceiver!
}

enum IsRead {
  read
  unread
}

enum NotificationRequestType {
  requestComing
  requestAccepted
  requestDeclined
}

type RequestReceiver {
  id: Int!
  requestId: Int!
  request: Request!
  receiverId: Int!
  receiver: User!
}

type Judgement {
  id: Int!
  createdAt: DateTime!
  type: JudgementType!
  userId: Int!
  user: User!
  comments: [Comment!]!
  requestId: Int!
  request: Request!
}

enum JudgementType {
  approve
  decline
}

type Request {
  id: Int!
  requesterId: Int!
  requester: User!
  invoiceId: String!
  invoice: Invoice!
  status: RequestStatus!
  companyId: Int!
  company: Company!
  createdAt: DateTime!
  comments: [Comment!]!
  requestReceivers: [RequestReceiver!]!
  judgements: [Judgement!]!
}

enum RequestStatus {
  requesting
  approved
  declined
}

type Construction {
  id: Int!
  code: String
  createdAt: DateTime!
  name: String!
  companyId: Int!
  company: Company!
}

type Invoice {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  billingDate: DateTime!
  dueDateForPayment: DateTime!
  paymentAmount: Float!
  constructionId: Int
  construction: Construction
  createdById: Int!
  createdBy: User!
  companyId: Int!
  company: Company!
  status: InvoiceStatus!
}

enum InvoiceStatus {
  notRequested
  requested
  rejected
  completelyApproved
}

type Comment {
  id: Int!
  content: String!
  createdAt: DateTime!
  invoiceId: String!
  invoice: Invoice!
  userId: Int!
  user: User!
  requestId: Int!
  request: Request
  judgementId: Int
  judgement: Judgement
}

type PartnerCompany {
  id: Int!
  name: String!
  phoneNumber: String!
  postalCode: String!
  prefecture: Prefecture
  city: String!
  restAddress: String!
  code: String!
  generalContractorId: Float!
  generalContractor: Company!
}

enum Prefecture {
  hokkaido
  aomori
  iwate
  miyagi
  akita
  yamagata
  fukushima
  ibaraki
  tochigi
  gunma
  saitama
  chiba
  tokyo
  kanagawa
  niigata
  toyama
  ishikawa
  fukui
  yamanashi
  nagano
  gifu
  shizuoka
  aichi
  mie
  shiga
  kyoto
  osaka
  hyogo
  nara
  wakayama
  tottori
  shimane
  okayama
  hiroshima
  yamaguchi
  tokushima
  kagawa
  ehime
  kochi
  fukuoka
  saga
  nagasaki
  kumamoto
  oita
  miyazaki
  kagoshima
  okinawa
}

type User {
  id: Int!
  email: String!
  familyName: String!
  givenName: String!
  familyNameFurigana: String!
  givenNameFurigana: String!
  isAdmin: Boolean!
  employeeCode: String
  createdAt: DateTime!
  companyId: Int!
  company: Company!
  partnerCompanyId: Int!
  partnerCompany: PartnerCompany
}

type Company {
  id: Int!
  createdAt: DateTime!
  name: String!
  phoneNumber: String!
  postalCode: String!
  prefecture: Prefecture
  city: String!
  restAddress: String!
}

input InvoiceLogElementInput {
  elementId: String!
  value: String!
}

type Query {
  users: [User!]!
  getUser(id: Int!): User!
  companies: [Company!]!
  getCompany(id: Int!): Company!
  invoiceFormats: [InvoiceFormat!]!
  getInvoiceFormat(id: String!): InvoiceFormat!
  invoices: [Invoice!]!
  getInvoice(id: String!): Invoice!
  comments: [Comment!]!
  getComment(id: Int!): Comment!
  requestReceivers: [RequestReceiver!]!
  getRequestReceiver(id: Int!): RequestReceiver!
  requests: [Request!]!
  getRequest(id: Int!): Request!
  requestNotifications: [RequestNotification!]!
  getRequestNotification(id: Int!): RequestNotification!
  judgements: [Judgement!]!
  getJudgement(id: Int!): Judgement!
  invoiceFormatLogs: [InvoiceFormatLog!]!
  getInvoiceFormatLog(id: String!): InvoiceFormatLog!
  invoiceFormatElements(logId: String!): [InvoiceFormatElement!]!
  getInvoiceFormatElement(id: String!): InvoiceFormatElement!
  invoiceLogs: [InvoiceLog!]!
  getInvoiceLog(id: String!): InvoiceLog!
}

type Mutation {
  addUser(newUser: NewUserInput!): User!
  removeUser(id: Int!): Boolean!
  addCompany(newCompany: NewCompanyInput!): Company!
  removeCompany(id: Int!): Boolean!
  addInvoiceFormat(newInvoiceFormat: NewInvoiceFormatInput!): InvoiceFormat!
  removeInvoiceFormat(id: String!): Boolean!
  addInvoice(newInvoice: NewInvoiceInput!): Invoice!
  removeInvoice(id: String!): Boolean!
  addComment(newComment: NewCommentInput!): Comment!
  removeComment(id: Int!): Boolean!
  addRequestReceiver(newRequestReceiver: NewRequestReceiverInput!): RequestReceiver!
  removeRequestReceiver(id: Int!): Boolean!
  addRequest(newRequest: NewRequestInput!): Request!
  addRequestNotification(newRequestNotification: NewRequestNotificationInput!): RequestNotification!
  removeRequestNotification(id: Int!): Boolean!
  addJudgement(newJudgement: NewJudgementInput!): Judgement!
  addInvoiceLog(newInvoiceLog: NewInvoiceLogInput!): InvoiceLog!
  updateInvoiceLog(input: UpdateInvoiceLogInput!): InvoiceLog!
  removeInvoiceLog(id: String!): Boolean!
}

input NewUserInput {
  email: String!
  familyName: String!
  givenName: String!
  familyNameFurigana: String!
  givenNameFurigana: String!
  isAdmin: Boolean!
  employeeCode: String
  companyId: Int!
}

input NewCompanyInput {
  name: String!
}

input NewInvoiceFormatInput {
  name: String!
  companyId: Int!
}

input NewInvoiceInput {
  userId: Int!
  companyId: Int!
  status: Int!
}

input NewCommentInput {
  content: String!
  invoiceId: String!
  userId: Int!
  requestId: Int!
}

input NewRequestReceiverInput {
  receiverId: Int!
  requestId: Int!
}

input NewRequestInput {
  requesterId: Int!
  invoiceId: String!
  requestReceiverIds: [Int!]!
  comment: String!
}

input NewRequestNotificationInput {
  userId: Int!
  isRead: String!
  type: String!
  requestReceiverId: Int!
}

input NewJudgementInput {
  userId: Int!
  comment: String!
  requestId: Int!
  type: String!
}

input NewInvoiceLogInput {
  invoiceFormatLogId: String!
  body: [InvoiceLogElementInput!]!
}

input UpdateInvoiceLogInput {
  id: String!
  body: [InvoiceLogElementInput!]!
}
